#include"Porazryad.h"
int *Sozd(int b)//b - это количество элементов в массиве.
{
	int*a = new int [b];
	return a;
}

void Zap(int*a, int b)//a - это массив; b - это количество элементов в массиве.
{
	for (int i=0;i<b;i++)
		a[i]=1+rand()%9999;
}

void Vyvod(int*a, int b)//a - это массив; b - это количество элементов в массиве.
{
	for (int i=0;i<b;i++)
		cout<<" "<<a[i];
	cout<<"\n";
}

void Poraz(int*a, int b)//a - это массив; b - это количество элементов в массиве.
{
	int razrka, del, razr=1;//razrka - это количество разрядов в каждом элементе массива; del - это переменная для деления элемента массива на 10;
//razr - это максимальный разряд чисел во всём массиве.
	//double des, s;
	for (int i=0;i<b;i++)//Вычисление максимального количества разрядов чисел в массиве.
	{
		razrka=0;
		del=a[i];
		while (del!=0)
		{
			del/=10;
			razrka++;
			if (razrka>razr)
				razr=razrka;
		}
	}
	cout<<"Максимальный разряд: "<<razr<<"\n";
	int k=10;//k - это количество элементов в массиве для сортировки подсчётом каждого разряда каждого элемента массива.
	int*c = new int[k];//c - это массив для сортировки подсчётом
	int*e = new int[b];//e - это массив, в который будут перезаписываться отсортированные методом подсчёта элементы массива.
	for (int i=0;i<k;i++)//Обнуляем массив для сортировки подсчётом.
		c[i]=0;
	for (double os=1,ce=0; os<=razr,ce<razr; os++,ce++)//os - это переменная для выделения остатка элемента массива; ce - это переменная для
//выделения целой части элемента массива.
	{
		int i;
		int ost=pow(10.0,os), cel=pow(10.0,ce);//ost - это делитель для выделения остатка элемента массива; cel - это делитель для выделения
//целой части элемента массива.
		for (int i=0;i<b;i++)//Подсчёт количества каждого числа в массиве.
			c[(a[i]%ost)/cel]++;
	}
	for (int i=1;i<k;i++)//Упорядочение количества каждого числа по массиву.
	{
		int j=0;
		while (j<i)
		{
			c[i]+=c[j];
			j++;
		}
	}
	/*for (int i=0;i<b;i++)//Перезапись отсортированных элементов массива. Я пока не могу понять, как это сделать.
	{
		int d=a[i];
		e[c[d]]=d;
		c[d]++;
	}*/
}