#include"KMP.h"
char *Sozdchar(int b)//b - это количество элементов в строке.
{
	char*a = new char[b];
	return a;
}

int *Sozdint(int b)//b - это количество элементов в массиве.
{
	int*a=new int[b];
	return a;
}

void Vyvod(char*a, int b)//a - это строка; b - это количество элементов в строке.
{
	for(int i=0;i<b;i++)
		cout<<" "<<a[i];
	cout<<"\n";
}

void Vyvodint(int*a,int b)//a - это массив; b - это количество элементов в массиве.
{
	for(int i=0;i<b;i++)
		cout<<" "<<a[i];
	cout<<"\n";
}

int *Prefix(char*a,int b)//a - это шаблон, b - это количество элементов в шаблоне.
{
	int *c = new int[b];//Создаю массив, в котором будет табличка префиксов.
	for(int i=0;i<b;i++)
		c[i]=0;//Обнуляю все элементы массива.
	int kol=0;//Количество совпавших элементов равно 0.
	for(int i=0,j=1;(j<b) && (i<b);j++)
	{
		if (a[i]==a[j])
		{
			kol++;
			if (kol>b/2)//Суффикс и префикс не могут быть больше половины массива.
			{
				kol=0;
				j--;
			}
			else
			{
				c[j]=kol;//В элемент массива записывается размер суффикса-префикса.
				i++;
			}
		}
		else
		{
			if ((kol>0) && (a[0]==a[j]))//После нахождения несовпавшего элемента, если j-ый элемент равен нулевому.
			{
				kol=1;
				c[j]=kol;
				i=1;
			}
			else
			{
				kol=0;
				i=0;
			}
		}
	}
	return c;
}

void Poisk(char*a, int b, char*c, int d, int*e)//a - это исходная строка, b - это количество элементов в исходной строке, c - это шаблон;
//d - это количество элементов в шаблоне; e - это таблица префиксов-суффиксов.
{
	int i=0,j=0,kol=0,ind;//i и j - индексы для элементов в строке и в шаблоне; kol - это количество совпавших элементов;
//ind - это индекс первого вхождения шаблона, если таковой имеется.
	while((i<b) && (j<d))
	{
		if (a[i]==c[j])
		{
			kol++;
			if (j==d-1)//Если индекс шаблона последний, значит шаблон найден.
			{
				ind=i-kol+1;//Вычисление индекса первого вхождения шаблона.
				cout<<"\n   Индекс первого вхождения искомого шаблона: "<<ind<<"\n";
				i++;
				j++;
			}
			else//Если шаблон ещё не полностью совпал, то продолжаем поиск.
			{
				i++;
				j++;
			}
		}
		else//Если элементы не совпали, то сдвигаем шаблон на определённое количество элементов.
		{
			if (a[i]==c[0])//Если i-ый и нулевой элементы совпадают, чтобы не пропустить вхождение.
				{
					kol=1;
					i++;
					j=1;
				}
			else
			{
				if ((kol>1) && (kol<b))
				{
					i+=d-e[i-1]-kol;//Сдвиг шаблона по строке.
					j=0;
					kol=0;
				}
				else//Если ещё ничего не совпало, то сдвигаем шаблон на 1 элемент.
				{
					kol=0;
					if (i==b-1)//Если индекс шаблона последний, значит шаблон не найден.
					{
						cout<<" \n ! Шаблон не найден!\n";
						i++;
					}
					else//Иначе продолжаем поиск.
					{
						i++;
						j=0;
					}
				}
			}
		}
	}
}