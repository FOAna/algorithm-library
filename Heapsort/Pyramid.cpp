#include"Pyramid.h"
int *Sozd(int b)//b - это количество элементов в массиве.
{
	int*a = new int[b];//—оздание динамического одномерного массива.
	return a;
}

void Zap(int*a,int b)//a - это одномерный массив; b - это количество элементов в массиве.
{
	for (int i=0;i<b;i++)
		a[i]=1+rand()%99;//«аполнение массива рандомными числами от 1 до 99.
}

void Vyvod(int*a,int b)//a - это одномерный массив; b - это количество элементов в массиве.
{
	for (int i=0;i<b;i++)//¬ывод массива поэлемнтно.
		cout<<" "<<a[i];
	cout<<"\n";
}

void Pyram(int*a,int n)//a - сортируемый массив; n - количество элементов в массиве.
{
	int b=0,c=0;//b - это количество переставленных элементов
	for (int i=0;(2*i+1)<n;i++)
		c = i;//»ндекс последнего узла в пирамиде.
	for (int i=c;i>=0;i--)//Ќачинаем с последнего узла в пирамиде
	{
		if ((2*i+2)<n)//≈сли правый потомок существует
		{
			if(a[2*i+2]>a[i])//≈сли потомок больше родител€, мен€ем их местами.
			{
				int d = a[i];
				a[i] = a[2*i+2];
				a[2*i+2] = d;
				b++;
			}
		}
		if (a[2*i+1]>a[i])
		{
			int d = a[i];
			a[i] = a[2*i+1];
			a[2*i+1] = d;
			b++;
		}
	}
	if (b)//≈сли была проведена хот€ бы одна перестановка элементов.
		Pyram(a,n);
	else//»наче значение вершины пирамиды мен€ем со значением последнего элемента пирамиды.
	{
		int d = a[0];
		a[0] = a[n-1];
		a[n-1] = d;
		n-=1;//ƒалее рассматриваем массив без найденного максимального элемента.
		if (n>1)
			Pyram(a,n);
	}
}